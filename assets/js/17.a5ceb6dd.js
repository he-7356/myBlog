(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{378:function(e,t,s){"use strict";s.r(t);var r=s(45),n=Object(r.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h3",[e._v("Promise 执行流程")]),e._v(" "),s("p",[e._v("1.当新对象保持“pending”状态时，原Promise链将会中止执行。")]),e._v(" "),s("p",[e._v("2.return new Promise(()=>{}); // 返回“pending”状态的Promise对象")]),e._v(" "),s("p",[e._v("3.从如何停掉 Promise 链说起(promise内存泄漏问题)")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("promise 放在try catch里面有什么结果\n")])])]),s("p",[e._v("1.Promise 对象的错误具有冒泡性质，会一直向后传递，直到被捕获为止，也即是说，错误总会被下一个catch语句捕获")]),e._v(" "),s("p",[e._v("2.当Promise链中抛出一个错误时，错误信息沿着链路向后传递，直至被捕获")])])}),[],!1,null,null,null);t.default=n.exports}}]);